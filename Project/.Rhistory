tablex
library(dplyr)
library(reshape2)
library(ggplot2)
data1718 <- read.csv("https://www.football-data.co.uk/mmz4281/1718/SP1.csv")
data1819 <- read.csv("https://www.football-data.co.uk/mmz4281/1819/SP1.csv")
data1920 <- read.csv("https://www.football-data.co.uk/mmz4281/1920/SP1.csv")
lista <- list(data1718, data1819, data1920)
lista <- lapply(lista, select, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
lista[[1]] <- mutate(lista[[1]], Date = as.Date(Date, "%d/%m/%y"))
lista[[2]] <- mutate(lista[[2]], Date = as.Date(Date, "%d/%m/%Y"))
lista[[3]] <- mutate(lista[[3]], Date = as.Date(Date, "%d/%m/%Y"))
data <- do.call(rbind, lista)
lista <- list(data1718, data1819, data1920)
lista <- lapply(lista, select, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
x <- data$FTHG
y <- data$FTAG
(tablex <- table(x))
(tablex <- prop.table(tablex))
str(tablex)
(tabley <- table(y))
(tabley <- prop.table(tabley))
str(tabley)
(tablexy <- table(x,y))
(tablexy <- prop.table(tablexy))
str(tablexy)
hola <- tablexy * tablex
tablex
tablex
1/tablex
sweep(tablexy, MARGIN = 2, vec, `*`)
(tablexy <- prop.table(tablexy))
(tablex <- prop.table(tablex))
tablex
tabley
sweep(tablexy, MARGIN = 2, 1/y, `*`)
mat <- matrix(rep(1:3,each=5),nrow=3,ncol=5,byrow=TRUE)
mat
vec <- 1:5
vec
sweep(mat, MARGIN=2, vec, `*`)
sweep(tablexy, 1/y, `*`)
sweep(tablexy, MARGIN = 2, 1/tabley, `*`)
tablexy
tablex
tablexy
1/tablex
sweep(tablexy, MARGIN = 2, 1/tabley, `*`)
sweep(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8), `+`)
sweep(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8,9), `+`)
sweep(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8,9), `+`)
sweep(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8), `+`)
sweep(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8), `+`)
tala
(tablexy, MARGIN = 2, c(1,2,3,4,5,6,7,8), `+`)
sweep(tablexy, MARGIN = 2, c(0,1,2,3,4,5,6,7,8), `+`)
sweep(tablexy, MARGIN = 2, 1/tabley, `+`)
sweep(tablexy, MARGIN = 2, 1/tabley, `*`)
tabley
tablexy
sweep(tablexy, MARGIN = 2, 1/tabley, `*`)
mat <- matrix(rep(1:3,each=5),nrow=3,ncol=5,byrow=TRUE)
mat
mat
vec
sweep(mat, MARGIN=2, c(1,2,3,4,5), `+`)
mat
sweep(mat, MARGIN=1, c(1,2,3), `+`)
tablexy
tablex
sweep(tablexy, MARGIN = 1, 1/tablex, `*`)
cocientes <- sweep(tablexy, MARGIN = 2, 1/tabley, `*`)
cocientes <- sweep(cocientes, MARGIN = 1, 1/tablex, `*`)
cocientes
tablex
tabley
tablexy
cocientes
cocientes
bootstrapx <- replicate(n = 1000, sample(x), replace = TRUE)
install.packages("tidyvers")
library(dplyr)
library(reshape2)
library(ggplot2)
library(tidyverse)
bootstrapx <- replicate(n = 1000, sample(x), replace = TRUE)
bootstrapx <- replicate(n = 1000, sample(x, replace = TRUE))
dim(bootstrapx)
bootstrapy <- replicate(n = 1000, sample(y, replace = TRUE))
dim(bootstrapy)
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(reshape2)))
suppressWarnings(suppressMessages(library(ggplot2)))
url1718 <- "https://www.football-data.co.uk/mmz4281/1718/SP1.csv"
url1819 <- "https://www.football-data.co.uk/mmz4281/1819/SP1.csv"
url1920 <- "https://www.football-data.co.uk/mmz4281/1920/SP1.csv"
d1718 <- read.csv(file = url1718) # ImportaciÃ³n de los datos a R
d1819 <- read.csv(file = url1819)
d1920 <- read.csv(file = url1920)
str(d1718); str(d1819); str(d1920)
head(d1718); head(d1819); head(d1920)
View(d1718); View(d1819); View(d1920)
summary(d1718); summary(d1819); summary(d1920)
#Ahora seleccionaremos Ãºnicamente las columnas Date, HomeTeam, AwayTeam, FTHG, FTAG y FTR en cada uno de los data frames. Primero guardaremos los data frames en una lista con nombre lista y despuÃ©s con ayuda de las funciones lapply y select (del paquete dplyr), seleccionaremos las columnas deseadas. Los nuevos data frames quedarÃ¡n guardados en nlista.
lista <- list(d1718, d1819, d1920)
nlista <- lapply(lista, select, Date, HomeTeam, AwayTeam, FTHG, FTAG, FTR)
#Con las funciones lapply y str observaremos la estrucura de nuestros nuevos data frames
lapply(nlista, str)
#Con las funciones lapply y str observaremos la estrucura de nuestros nuevos data frames
lapply(nlista, str)
#Arreglamos las columnas Date para que R reconozca los elementos como fechas, esto lo hacemos con las funciones mutate (paquete dplyr) y as.Date.
nlista[[1]] <- mutate(nlista[[1]], Date = as.Date(Date, "%d/%m/%y"))
nlista[[2]] <- mutate(nlista[[2]], Date = as.Date(Date, "%d/%m/%Y"))
nlista[[3]] <- mutate(nlista[[3]], Date = as.Date(Date, "%d/%m/%Y"))
#Verificamos que nuestros cambios se hayan llevado a cabo
lapply(nlista, str)
#Finalmente, con ayuda de las funciones rbind y do.call combinamos los data frames contenidos en nlista como un Ãºnico data frame
data <- do.call(rbind, nlista)
dim(data)
str(data)
tail(data)
summary(data)
#Con ayuda de la funciÃ³n table obtenemos las estimaciones de probabilidades solicitadas
(pcasa <- round(table(data$FTHG)/dim(data)[1], 3)) # Probabilidades marginales estimadas para los equipos que juegan en casa
(pvisita <- round(table(data$FTAG)/dim(data)[1], 3)) # Probabilidades marginales estimadas para los equipos que juegan como visitante
(pcta <- round(table(data$FTHG, data$FTAG)/dim(data)[1], 3)) # Probabilidades conjuntas estimadas para los partidos
#Con la funciÃ³n apply primero dividimos cada elemento de las columnas de la matriz de probabilidades conjuntas, por las probabilidades marginales asociadas y que corresponden al equipo de casa. Note como hemos definido una funciÃ³n anÃ³mima dentro de apply. Luego dividimos cada elemento de las filas de la matriz que resulta, por las probabilidades marginales asociadas y que corresponden al equivo visitante. Finalmente hacemos obtenemos la transpuesta de la matriz que resulta. Esta Ãºltima matriz, es la matriz de cocientes buscada, es decir, hemos dividio cada probabilidad conjunta, por el producto de probabilidades marginales correspondientes.
(cocientes <- apply(pcta, 2, function(col) col/pcasa))
(cocientes <- apply(cocientes, 1, function(fila) fila/pvisita))
(cocientes <- t(cocientes))
bootstrapx <- sample(x, replace = TRUE)
bootstrapx
bootstrapx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(talble(bootstrapx))
bootstrapx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(bootstrapx))
bootstrapx
(y, replace = TRUE)
bootstrapy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(bootstrapy))
bootstrapy
bootstrapx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(bootstrapx))
bootstrapy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(bootstrapy))
bootstrapxy <- prop.table(table(bootstrapx, bootstrapy))
bootstrapx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(bootstrapx))
bootstrapy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(bootstrapy))
bootstrapxy <- prop.table(table(bootstrapx, bootstrapy))
(tabley <- table(y))
(tabley <- prop.table(tabley))
str(tabley)
(tablexy <- table(x,y))
bootstrapxy <- prop.table(table(bootstrapx, bootstrapy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
x <- data$FTHG
y <- data$FTAG
tablex <- prop.table(table(x))
tabley <- prop.table(table(y))
tablexy <- prop.table(table(x,y))
cocientes <- sweep(tablexy, MARGIN = 1, 1/tablex, `*`)
cocientes <- sweep(cocientes, MARGIN = 2, 1/tabley, `*`)
cocientes
bootstrapx
bootstrapy
tablex <- prop.table(table(x))
tablex
tabley <- prop.table(table(y))
tabley
tablexy <- prop.table(table(x,y))
cocientes <- sweep(tablexy, MARGIN = 1, 1/tablex, `*`)
cocientes <- sweep(cocientes, MARGIN = 2, 1/tabley, `*`)
cocientes
bootstrapx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(bootstrapx))
bootstrapx
bootstrapy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(bootstrapy))
bootstrapy
bootstrapxy <- prop.table(table(newx, newy))
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapy
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
(m <- matrix(1:9, nrow = 3, ncol = 3))
m[1,1]
m[ ,1]
(sum.vecmat <- c(1, 2) + m)
(n <- matrix(2:7, 4, 6))
dim(n)
n[n > 4]
which(n > 4)
n[n > 4]
which(n > 4)
a <- 2:6
b <- 5:9
cbind(a,b)
rbind(a,b)
apply(n, 1, mean)
apply(n, 2, sort)
n[n > 4]
[n > 4]
logic <- bootstrap.cocientes => 1
logic <- bootstrap.cocientes >= 1
logic
(n <- matrix(2:7, 4, 6))
(n <- matrix(2:7, 2, 3))
n <- n*n
n
logic <- logic * logic
logic
result <- result * logic
result
(n <- matrix(false, 2, 3))
(n <- matrix(replicate(n = 2*3, false), 2, 3))
(n <- matrix(replicate(n = 2*3, FALSE), 2, 3))
(n <- matrix(FALSE, 2, 3))
dim(cocientes)
dim(cocientes)[1]
dim(cocientes)[2]
(n <- matrix(FALSE, dim(cocientes)[1], dim(cocientes)[2]))
result <- matrix(FALSE, dim(cocientes)[1], dim(cocientes)[2])
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
logic <- bootstrap.cocientes >= 1
logic
result <- result | logic
result <- result * logic
result <- result || logic
result
result <- matrix(FALSE, dim(cocientes)[1], dim(cocientes)[2])
dim(logic)
dim(result)
dim(cocientes)
bootstrap.cocientes
logic <- bootstrap.cocientes >= 1
logic
logic
dim(logic)
logic
dim(cocientes)
cocientes
dim(cocientes)
result <- matrix(FALSE, 9, 7)
result
result
dim(result)
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
logic <- bootstrap.cocientes >= 1
logic
dim(logic)
result
dim(bootstrap.cocientes)
bootstrap.cocientes
bootstrap.cocientes
dim(bootstrap.cocientes)
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
cocientes <- sweep(cocientes, MARGIN = 2, 1/tabley, `*`)
newx <- sample(x, replace = TRUE)
bootstrapx <- prop.table(table(newx))
newy <- sample(y, replace = TRUE)
bootstrapy <- prop.table(table(newy))
bootstrapxy <- prop.table(table(newx, newy))
bootstrap.cocientes <- sweep(bootstrapxy, MARGIN = 2, 1/bootstrapy, `*`)
bootstrap.cocientes <- sweep(bootstrap.cocientes, MARGIN = 1, 1/bootstrapx, `*`)
bootstrap.cocientes
(my_scatplot <- ggplot(mtcars,
aes(x = wt, y = mpg)) +
geom_point())
(my_scatplot <- ggplot(mtcars,
aes(x=wt,y=mpg)) +
geom_point() +
geom_smooth(method = "lm", se = T))  # modelo lineal, cambia el parametro `se`, este hace referencia al intervalo de confianza
my_scatplot + xlab('Weight (x 1000lbs)') + ylab('Miles per Gallon')
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg, col = cyl)) + geom_point())
setwd("C:\\Users\\dapar\\OneDrive\\Documents\\Programacion-con-R-Santander-master\\Sesion-05\\Ejemplo-02")
nyc <- read.csv("nyc.csv", header = TRUE)
head(nyc, 2); tail(nyc, 2); dim(nyc)
attach(nyc)
m1 <- lm(Price ~ Food + Decor + Service + East)
summary(m1)
modelo.general <- lm(indices.2005$General ~ indices.2005$Subyacente + indices.2005$Nosubyacente)
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
setwd("~/Programacion-con-R-Santander-master/Modulo-2-BEDU-Equipo-15/Project")
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
data <- mutate(data, Periodo = as.Date(Periodo, "%Y-%m-%d"))
data <- mutate(data, General = as.numeric(as.character(General)))
data <- mutate(data, Subyacente = as.numeric(as.character(Subyacente)))
data <- mutate(data, Mercancias = as.numeric(as.character(Mercancias)))
data <- mutate(data, Servicios = as.numeric(as.character(Servicios)))
data <- mutate(data, Nosubyacente = as.numeric(as.character(Nosubyacente)))
data <- mutate(data, Agropecuarios = as.numeric(as.character(Agropecuarios)))
data <- mutate(data, Energeticos = as.numeric(as.character(Energeticos)))
indices.2005 <-  data %>% filter(Periodo >= ymd("2005-1-1"))
modelo.general <- lm(indices.2005$General ~ indices.2005$Subyacente + indices.2005$Nosubyacente)
indices.2005 <-  data %>% filter(Periodo >= ymd("2005-1-1"))
data <- read.csv("indicadores.csv", fileEncoding="UTF-8-BOM")
str(data)
data <- select(data, General:Energeticos)
data <- mutate(data, Periodo= seq(ymd("1970-1-1"), ymd("2020-12-1"), by = "months"))
write.csv(data, "Indice-nacional-de-precios-al-consumidor.csv", row.names = FALSE)
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
data <- mutate(data, Periodo = as.Date(Periodo, "%Y-%m-%d"))
library(dbplyr)
library(pool)
library(lubridate)
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
data <- mutate(data, Periodo = as.Date(Periodo, "%Y-%m-%d"))
data <- mutate(data, General = as.numeric(as.character(General)))
data <- mutate(data, Subyacente = as.numeric(as.character(Subyacente)))
install.packages("lubridate")
install.packages("lubridate")
library(dbplyr)
library(pool)
library(lubridate)
data <- read.csv("indicadores.csv", fileEncoding="UTF-8-BOM")
str(data)
data <- select(data, General:Energeticos)
data <- mutate(data, Periodo= seq(ymd("1970-1-1"), ymd("2020-12-1"), by = "months"))
write.csv(data, "Indice-nacional-de-precios-al-consumidor.csv", row.names = FALSE)
data <- read.csv("Indice-nacional-de-precios-al-consumidor.csv", fileEncoding="UTF-8-BOM")
data <- mutate(data, Periodo = as.Date(Periodo, "%Y-%m-%d"))
data <- mutate(data, General = as.numeric(as.character(General)))
data <- mutate(data, Subyacente = as.numeric(as.character(Subyacente)))
data <- mutate(data, Mercancias = as.numeric(as.character(Mercancias)))
data <- mutate(data, Servicios = as.numeric(as.character(Servicios)))
data <- mutate(data, Nosubyacente = as.numeric(as.character(Nosubyacente)))
data <- mutate(data, Agropecuarios = as.numeric(as.character(Agropecuarios)))
data <- mutate(data, Energeticos = as.numeric(as.character(Energeticos)))
str(data)
head(data)
tail(data)
indices.2005 <-  data %>% filter(Periodo >= ymd("2005-1-1"))
str(indices.2005)
head(indices.2005)
tail(indices.2005)
modelo.general <- lm(indices.2005$General ~ indices.2005$Subyacente + indices.2005$Nosubyacente)
summary(modelo.general)
indices.2005.general <- data.frame(x = indices.2005$Periodo, y = indices.2005$General, group = rep("General", nrow(indices.2005)))
indices.2005.subyacente <- data.frame(x = indices.2005$Periodo, y = indices.2005$Subyacente, group = rep("Subyacente", nrow(indices.2005)))
indices.2005.mercancias <- data.frame(x = indices.2005$Periodo, y = indices.2005$Mercancias, group = rep("Mercancias", nrow(indices.2005)))
indices.2005.servicios <- data.frame(x = indices.2005$Periodo, y = indices.2005$Servicios, group = rep("Servicios", nrow(indices.2005)))
indices.2005.nosubyacente <- data.frame(x = indices.2005$Periodo, y = indices.2005$Nosubyacente, group = rep("Nosubyacente", nrow(indices.2005)))
indices.2005.agropecuarios <- data.frame(x = indices.2005$Periodo, y = indices.2005$Agropecuarios, group = rep("Agropecuarios", nrow(indices.2005)))
indices.2005.energeticos <- data.frame(x = indices.2005$Periodo, y = indices.2005$Energeticos, group = rep("Energeticos", nrow(indices.2005)))
indices.2005.general.plot <- ggplot(indices.2005.general, aes(x, y, col = group)) + geom_line()
indices.2005.general.plot
indices.2005.subgeneral.plot <- ggplot( rbind(indices.2005.general,
indices.2005.subyacente,
indices.2005.nosubyacente),
aes(x, y, col = group)) + geom_line()
setwd("C:\\Users\\dapar\\OneDrive\\Documents\\Programacion-con-R-Santander-master\\Sesion-05\\Ejemplo-02")
nyc <- read.csv("nyc.csv", header = TRUE)
head(nyc, 2); tail(nyc, 2); dim(nyc)
attach(nyc)
m1 <- lm(Price ~ Food + Decor + Service + East)
summary(m1)
data <- read.csv("Poblacion_01.csv")
setwd("~/Programacion-con-R-Santander-master/Modulo-2-BEDU-Equipo-15/Project")
data <- read.csv("Poblacion_01.csv")
str(data)
data <- read.csv("Poblacion_01.csv")
str(data)
population <- read.csv("Poblacion_01.csv")
str(population)
